<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <property name="timestamp.type" value="TIMESTAMP WITH TIME ZONE" dbms="oracle,postgresql,hsqldb"/>
    <property name="timestamp.type" value="DATETIME" dbms="mysql"/>

    <changeSet id="20150123105016-1" author="dgoodwin">
        <comment>Add consumer checkin table.</comment>
        <createTable tableName="cp_consumer_checkin">

            <column name="id" type="VARCHAR(32)">
                <constraints nullable="false" primaryKey="true" primaryKeyName="cp_consumer_checkin_pkey"/>
            </column>

            <column name="consumer_id" type="VARCHAR(32)">
                <constraints nullable="false"/>
            </column>

            <column name="created" type="${timestamp.type}"/>
            <column name="updated" type="${timestamp.type}"/>
            <column name="checkintime" type="${timestamp.type}"/>

        </createTable>

        <addForeignKeyConstraint baseColumnNames="consumer_id" baseTableName="cp_consumer_checkin" constraintName="fk_consumer_checkin_consumer" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" referencedColumnNames="id" referencedTableName="cp_consumer" referencesUniqueColumn="false"/>

        <createIndex indexName="idx_consumer_checkin_consumer" tableName="cp_consumer_checkin" unique="false">
            <column name="consumer_id"/>
        </createIndex>
    </changeSet>

    <changeSet id="20150123105016-2" author="dgoodwin">
        <comment>Populate consumer checkins table with current values.</comment>
        <!-- re-use the consumer ID as the first checkin ID to avoid generated ID problem, we know it will be unique -->
        <sql>INSERT INTO cp_consumer_checkin(id, consumer_id, created, updated) SELECT cp_consumer.id, cp_consumer.id, cp_consumer.lastcheckin, cp_consumer.lastcheckin FROM cp_consumer WHERE cp_consumer.lastcheckin IS NOT NULL</sql>
    </changeSet>

    <changeSet id="20150123105016-3" author="dgoodwin">
        <comment>Drop the old last checkin column.</comment>
        <dropColumn tableName="cp_consumer" columnName="lastcheckin"/>
    </changeSet>

</databaseChangeLog>
<!-- vim: set expandtab sts=4 sw=4 ai: -->
